define([
    	"dojo/_base/declare",
    	"dojo/_base/lang",
    	"dojo/string",
    	"dojo/request/iframe",
    	"dojo/dom-class",
    	"dojo/dom-style",
    	"ecm/model/Request",
    	"ecm/widget/dialog/MessageDialog",
    	"ier/constants",
    	"ier/util/dialog",
    	"ier/util/util",
    	"ier/widget/BaseReportViewer",
    	"ier/messages",
    	"dijit/_TemplatedMixin", 
    	"dijit/_WidgetsInTemplateMixin",
    	"dojo/text!./templates/CognosViewer.html",
    	"dijit/layout/ContentPane", // in template
    	"dijit/layout/BorderContainer" // in template
], function(dojo_declare, dojo_lang, dojo_string, dojo_request_iframe, dojo_domClass, dojo_domStyle, ecm_model_Request, ecm_widget_dialog_MessageDialog, ier_constants, ier_util_dialog, ier_util, ier_widget_BaseReportViewer, 
		ier_messages, dijit_TemplatedMixin, dijit_WidgetsInTemplateMixin, templateString){

/**
 * @name CognosViewer
 * @class This widget is responsible for displaying a cognos report
 * @augments none
 */
return dojo_declare("ier.widget.CognosViewer", [ier_widget_BaseReportViewer, dijit_TemplatedMixin, dijit_WidgetsInTemplateMixin], {
	/** @lends ier.widget.BaseReportViewer.prototype */

	widgetsInTemplate: true,
	templateString: templateString,
	messages: ier_messages,

	postCreate: function() {
		this.inherited(arguments);
	},
	
	/**
	 * Creates the rendering for the report entry form
	 */
	createRendering: function(onComplete) {		
		if(onComplete)
			onComplete();
	},
	
	/**
	 * Called to view the report
	 * 
	 * @param reportResultJobId
	 * 			  The report result job id that is generated by the report engine after running the report.  
	 * @param onComplete
	 *            A function to be invoked when the viewing has completed
	 */
	view: function(reportResultJobId, onComplete) {
	    this.reportServerName = ecm.model.desktop.reportSettings.cognosGatewayServerName;
	    this.cognosReportPath = ecm.model.desktop.reportSettings.cognosReportPath;
	    if(this.cognosReportPath == null || this.cognosReportPath == "")
	    	this.cognosReportPath = ier_constants.DEFAULT_COGNOS_REPORT_PATH;
	    
	    if(!this.reportServerName){
	    	ier_util_dialog.showMessage(messages.report_noReportServerName);
	    } else {
	    	
	    	 this.enableWaitState();
	    	 var reportURL = dojo_string.substitute(ier_constants.IER_COGNOS_REPORT_URL, [ this.reportServerName, this.cognosReportPath, this.reportName, reportResultJobId]);
	    	 
	    	 this.viewer.src = reportURL;
	    	 
	    	 if (this.viewer.attachEvent){
	    		 this.viewer.attachEvent("onload", dojo_lang.hitch(this, function(){
	    			 this.disableWaitState();
	    		    }));
	    		} else {
	    			this.viewer.onload = dojo_lang.hitch(this, function(){
	    		    	this.disableWaitState();
	    		    });
	    		}
	    }
	    
	    this.mainContainer.resize();
	    
	    if(onComplete)
	    	onComplete();
	},
	
	/**
	 * Enables the wait state
	 */
	enableWaitState: function(){
		dojo_domClass.add(document.body, "ecmWait");
    	dojo_domStyle.set(this.reportLoadingText, "display", "");
    	dojo_domStyle.set(this.resultsPane.domNode, "display", "none");
	},
	
	/**
	 * Disables the wait state
	 */
	disableWaitState: function(){
		dojo_domStyle.set(this.reportLoadingText, "display", "none");
    	dojo_domStyle.set(this.resultsPane.domNode, "display", "");
    	dojo_domClass.remove(document.body, "ecmWait");
	},
	
	close: function(onComplete){	
		if(this.reportResultJobId){
			var params = ier_util.getDefaultParams(this.repository, dojo_lang.hitch(this, function(response)
			{	
				if(onComplete)
					onComplete();
			}));
			
			params.requestParams[ier_constants.Param_ReportResultsIds] = this.reportResultJobId;
			params.requestParams[ier_constants.Param_TableNames] =  this.tableName;

			ecm_model_Request.postPluginService(ier_constants.ApplicationPlugin, ier_constants.Service_DeleteReportResults, ier_constants.PostEncoding, params);
		}
		else {
			if(onComplete)
				onComplete();
		}
	}
});});
