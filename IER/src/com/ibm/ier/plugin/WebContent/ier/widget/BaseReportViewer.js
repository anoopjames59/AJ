/**
 * Licensed Materials - Property of IBM (C) Copyright IBM Corp. 2012 US Government Users Restricted Rights - Use,
 * duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 */

define([ "dojo/_base/declare",
         "dijit/layout/ContentPane",
         "ier/widget/admin/config"],

function(dojo_declare, dijit_layout_ContentPane, ier_admin_config) {

	/**
	 * @name ier.widget.BaseReportViewer
	 * @class Provides a base report viewer class to be used for report viewing
	 */
	return dojo_declare("ier.widget.BaseReportViewer", [ dijit_layout_ContentPane ], {
		/** @lends ier.widget.BaseReportViewer.prototype */

		/**
		 * The report definition id used to run this report
		 */
		reportDefinitionId: null,
		
		/**
		 * The report name that is being viewed
		 */
		reportName: null,
		
		/**
		 * A provided repository object
		 */
		repository: null,
		
		/**
		 * The report result job id that is generated by the report engine after running the report.  
		 * This id is the identifier for all the values retrieved and stored in the report engine database.
		 * Use this to access the report engine database, find the correct table name, and query for the JOB_ID.
		 */
		reportResultJobId: null,
		
		/**
		 * The table name of the database table storing all the report results.  Typically each table represents a report.
		 */
		tableName: null,
		
		/**
		 * The jdbc name of the report database.  Use this to access the report engine database to obtain the report results.
		 */
		JDBCNameOfReportDatabase: ier_admin_config.getJDBCReportDBDataSource(),

		/**
		 * Called to create the viewer and performs any types of initialization
		 * 
		 * * @param onComplete
		 * 		      A function to be invoked when viewer has finished initializing
		 *  
		 */
		createRendering: function(onComplete) {
		},

		/**
		 * Called to view the report
		 * 
		 * @param reportResultJobId
		 * 			  The report result job id that is generated by the report engine after running the report.  
		 * @param onComplete
		 *            A function to be invoked when the viewing has completed
		 */
		view: function(reportResultJobId, onComplete) {
			
		},
		
		/**
		 * Called when the report viewer is closed
		 * @param onComplete
		 *            A function to be invoked when the viewing has completed
		 */
		close: function(onComplete) {
		}
	});
});
